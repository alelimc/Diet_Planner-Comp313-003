# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
      - main

pool:
  name: project-selfhosted-agent

variables:
  JAVA_HOME: 'C:\Program Files\Java\jdk-17.0.14.7'
  MAVEN_HOME: 'C:\Apache\Maven'  # Should NOT include \bin
  MAVEN_OPTS: '-Dmaven.repo.local=$(Pipeline.Workspace)/.m2/repository'

steps:
# Setup Environment with Path Verification
- task: CmdLine@2
  displayName: 'Setup and Verify Environment'
  inputs:
    script: |
      echo JAVA_HOME=%JAVA_HOME%
      echo MAVEN_HOME=%MAVEN_HOME%
      
      REM Verify Java installation
      if not exist "%JAVA_HOME%\bin\java.exe" (
        echo Error: Java not found at %JAVA_HOME%\bin\java.exe
        exit /b 1
      )
      
      REM Verify Maven installation
      if not exist "%MAVEN_HOME%\bin\mvn.cmd" (
        echo Error: Maven not found at %MAVEN_HOME%\bin\mvn.cmd
        exit /b 1
      )
      
      echo ##vso[task.setvariable variable=JAVA_HOME]%JAVA_HOME%
      echo ##vso[task.setvariable variable=MAVEN_HOME]%MAVEN_HOME%
      echo ##vso[task.prependpath]%JAVA_HOME%\bin
      echo ##vso[task.prependpath]%MAVEN_HOME%\bin
      
      echo Java Version:
      java -version
      
      echo Maven Version:
      mvn -version
  env:
    PATH: $(JAVA_HOME)\bin;$(MAVEN_HOME)\bin;$(PATH)

# Build UI Project
- task: CmdLine@2
  displayName: 'Build UI Project'
  inputs:
    script: |
      cd Diet_Planner-Comp313-003
      mvn clean verify
  env:
    JAVA_HOME: $(JAVA_HOME)
    MAVEN_HOME: $(MAVEN_HOME)
    PATH: $(JAVA_HOME)\bin;$(MAVEN_HOME)\bin;$(PATH)

# Build API Project
- task: CmdLine@2
  displayName: 'Build API Project'
  inputs:
    script: |
      cd DietPlanner_MealServiceAPI
      mvn clean verify
  env:
    JAVA_HOME: $(JAVA_HOME)
    MAVEN_HOME: $(MAVEN_HOME)
    PATH: $(JAVA_HOME)\bin;$(MAVEN_HOME)\bin;$(PATH)

# SonarQube Analysis
- task: CmdLine@2
  displayName: 'Run SonarQube Scanner'
  inputs:
    script: |
      sonar-scanner ^
        -Dsonar.projectKey=dietplanner ^
        -Dsonar.projectName="Diet Planner App" ^
        -Dsonar.sources=. ^
        -Dsonar.java.binaries=**/target/classes ^
        -Dsonar.sourceEncoding=UTF-8 ^
        -Dsonar.java.source=17
  env:
    JAVA_HOME: $(JAVA_HOME)
    MAVEN_HOME: $(MAVEN_HOME)
    PATH: $(JAVA_HOME)\bin;$(MAVEN_HOME)\bin;$(PATH)

# Publish Test Results
- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/target/surefire-reports/TEST-*.xml'
    testRunTitle: 'Java Unit Tests'
  displayName: 'Publish Test Results'

# Publish Code Coverage
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: '**/target/site/jacoco/jacoco.xml'
    reportDirectory: '**/target/site/jacoco'
  displayName: 'Publish Code Coverage'

# Publish Artifacts
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '**/target/*.?ar'
    artifactName: 'dietplanner-artifacts'
    publishLocation: 'Container'
  displayName: 'Publish Build Artifacts'